---
title: "CSC3107 - Information Visualisation Project"
subtitle: "Data Preparation by P1 Orchid"
format: html
authors:
  - Jeffrey Yap Wan Lin
  - Liew Jun Wei
  - Poon Xiang Yuan
  - Ryan Ong Zhi Yong
  - Wong Yuxuan
  - Zaw Wana
---

# Data Preparation

## Load Libraries

```{r}
#| label: load-libraries
#| message: false

library(readxl)
library(dplyr)
library(gt)
library(ggplot2)
library(tidyverse)
library(ggnewscale)
library(scales)
```

## Load Dataset

```{r}
#| label: load-dataset
#| message: false

current_us <- read_excel(
  "SIPRI-Milex-data-2018-2023.xlsx",
  sheet = "Current US$",
  skip = 5)

share_gdp <- read_excel(
  "SIPRI-Milex-data-2018-2023.xlsx",
  sheet = "Share of GDP",
  skip = 5)
```

```{r}
current_us
share_gdp
```

## Data Cleaning

```{r}
#| label: data-cleaning

# Drop rows that the first column is NA
current_us <- current_us |> 
  filter(!is.na(`Country`))

# Drop Notes Column
current_us <- current_us |> 
  select(-Notes)

# Change column names from '2018.0' to '2018'
current_us <- current_us |> 
  rename_with(~sub("\\.0$", "", .))

# Drop rows that the second column is NA
current_us <- current_us |> 
  filter(!is.na(`2018`))

# Mutate '...' values to empty
current_us <- current_us |> 
  mutate(across(everything(), ~replace(., . == "...", NA)))

# Convert all columns to numeric
current_us <- current_us |> 
  mutate(across(-Country, as.numeric))

# Retain Top 10 Countries in 2023
current_us <- current_us |> 
  slice_max(`2023`, n = 10)

current_us
```

## Data Transformation

```{r}
#| label: data-transformation

# Convert Military Spending from Millions to Billions
current_us <- current_us |> 
  mutate(across(-Country, ~. / 1000))

# Convert Data to Integer
current_us <- current_us |> 
  mutate(across(-Country, as.integer))

current_us
```

## Bar Chart

```{r}
#| label: bar-chart

# Restructure Data for Bar Chart
top10_long <- current_us |> 
  select(Country, `2022`, `2023`) |>
  pivot_longer(cols = `2022`:`2023`, names_to = "Year", values_to = "Spending")

# Create a new dataframe column to show increase in spending from 2022 to 2023
top10_inc <- current_us |> 
  mutate(Increase = `2023` - `2022`) |> 
  select(Country, Increase)

top10_long
top10_inc

# Grouped Horizontal Bar Chart for Top 10 Countries
# Sort by 2023 Spending
bar_plot <- top10_long |>
  ggplot(aes(x = reorder(Country, Spending), y = Spending, fill = Year)) +
  geom_col(position = "dodge") +
  coord_flip() +
  labs(
    title = "Top 10 Countries by Military Spending from 2018 to 2023",
    x = "Country",
    y = "Military Spending in US$ (Billions)"
  )
  
bar_plot
```

## Share of GDP

```{r}
#| label: share-of-gdp

# Drop rows that the first column is NA
share_gdp <- share_gdp |> 
  filter(!is.na(`Country`))

# Drop Notes Column
share_gdp <- share_gdp |> 
  select(-Notes)

# Change column names from '2018.0' to '2018'
share_gdp <- share_gdp |> 
  rename_with(~sub("\\.0$", "", .))

# Drop rows that the second column is NA
share_gdp <- share_gdp |> 
  filter(!is.na(`2018`))

# Mutate '...' values to empty
share_gdp <- share_gdp |> 
  mutate(across(everything(), ~replace(., . == "...", NA)))

# Convert all columns to numeric
share_gdp <- share_gdp |> 
  mutate(across(-Country, as.numeric))

# Retain 10 Countries from current_us
share_gdp <- share_gdp |>
  filter(Country %in% current_us$Country)

# Convert to percentage
share_gdp <- share_gdp |>
  mutate(across(-Country, ~. * 100))

# Change to 2.dp
share_gdp <- share_gdp |>
  mutate(across(-Country, ~round(., 2)))

share_gdp
```

```{r}
# Share of GDP Bar Chart
share_gdp_long <- share_gdp |> 
  select(Country, `2022`, `2023`) |>
  pivot_longer(cols = `2022`:`2023`, names_to = "Year", values_to = "Share")

share_gdp_long

# Restructure Data for Bar Chart
top10_long <- current_us |> 
  select(Country, `2022`, `2023`) |>
  pivot_longer(cols = `2022`:`2023`, names_to = "Year", values_to = "Spending")

# Merge Data
merged_data <- top10_long |>
  left_join(share_gdp_long, by = c("Country", "Year"))

merged_data

bar_plot2 <- merged_data |>
  ggplot(aes(x = reorder(Country, Spending), y = Spending, fill = Share)) +
  geom_col(position = "dodge") +
  coord_flip() +
  labs(
    title = "Top 10 Countries by Military Spending in 2023",
    x = "Country",
    y = "Military Spending in US$ (Billions)",
    fill = "Share of GDP (%)"
  ) +
  scale_fill_stepsn(colors = c("tomato", "tomato4"), breaks = seq(0, 30, 3))

bar_plot2
```

```{r}
#| fig.width: 10
#| fig.height: 5
# Restructure Data for Bar Chart
top10_long <- current_us |> 
  select(Country, `2022`, `2023`) |>
  pivot_longer(cols = `2022`:`2023`, names_to = "Year", values_to = "Spending")

# Share of GDP Bar Chart
share_gdp_long <- share_gdp |> 
  select(Country, `2022`, `2023`) |>
  pivot_longer(cols = `2022`:`2023`, names_to = "Year", values_to = "Share")

# Merge Data
merged_data <- top10_long |>
  left_join(share_gdp_long, by = c("Country", "Year"))

scale_factor <- max(merged_data$Spending) / max(merged_data$Share)

bar_plot <- ggplot(merged_data, aes(x = reorder(Country, Spending), y = Spending, fill = Year)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_point(aes(y = Share * scale_factor, shape = "Share of GDP", color = Share), position = position_dodge(width = 0.9), size = 1) +
scale_color_stepsn(colors = c("lightgreen", "darkgreen"), breaks = seq(0, 30, 5)) +
  geom_text(aes(y = Share * scale_factor, label = round(Share, 2)), position = position_dodge(width = 0.9), vjust = 0.3, hjust = -0.3, size = 3) +
  scale_y_continuous(
    name = "Military Spending in US$ (Billions)",
    breaks = seq(0, max(merged_data$Spending), by = 100),  # Adjust breaks for the primary y-axis
    sec.axis = sec_axis(~ . / scale_factor, name = "Share of GDP (%)")
  ) +
  labs(
    title = "Top 10 Countries by Military Spending in 2023",
    x = "Country",
    y = "Military Spending in US$ (Billions)",
    sec.axis = "Share of GDP (%)"
  ) +
  coord_flip() +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 10),   # Adjust y-axis text font size
  ) +
  guides(
    fill = guide_legend(title = "Military Spending"),
    shape = guide_legend(title = "Share of GDP")
  )

bar_plot
```

```{r}

# Function to plot of Countries 2022 and 2023 Spending
plot_country <- function(country) {
  country_data <- merged_data |>
    filter(Country == country)
  
  country_plot <- country_data |>
    ggplot(aes(x = Year, y = Spending, fill = Share)) +
    geom_col(position = "dodge") +
    coord_flip() +
    scale_fill_stepsn(colors = c("lightblue", "blue"), breaks = seq(0, 30, 5)) +
    theme_void()
  
  return(country_plot)
}
```

```{r}
# Convert to gt table
merged_data_summary <- merged_data |>
  group_by(Country) |>
  summarise(
    `2022 Spending (US$ Billion)` = Spending[Year == "2022"],
    `2023 Spending (US$ Billion)` = Spending[Year == "2023"],
    `2022 Share of GDP (%)` = Share[Year == "2022"],
    `2023 Share of GDP (%)` = Share[Year == "2023"]
  ) |>
  # Sort by 2023 Spending 
  arrange(desc(`2023 Spending (US$ Billion)`))

gt_table <- merged_data_summary |>
  mutate(Function = Country) |>
  gt() |>
    tab_header(
    title = "Top 10 Countries by Military Spending from 2018 to 2023"
  ) |>
  cols_label(
    `2022 Spending (US$ Billion)` = "2022 Spending (US$ Billion)",
    `2023 Spending (US$ Billion)` = "2023 Spending (US$ Billion)",
    `2022 Share of GDP (%)` = "2022 Share of GDP (%)",
    `2023 Share of GDP (%)` = "2023 Share of GDP (%)"
  ) |>
  text_transform(
    locations = cells_body(Function),
    fn = function(x) {
     map(x, plot_country) |>
        ggplot_image(height = 100, aspect_ratio = 3)
    }
  )
  

gt_table
```

```{r}
# Function to plot line chart of Countries Spending from 2018 to 2023
plot_country_line <- function(country) {
  country_data <- current_us |>
    filter(Country == country) |>
    pivot_longer(cols = `2018`:`2023`, names_to = "Year", values_to = "Spending")
  
  country_plot <- country_data |>
    ggplot(aes(x = Year, y = Spending)) +
    geom_point(size = 20) +
    geom_line(group=1) +
    theme_void()
}

display_change <- function(x) {
  if (x > 0) {
    # Add Green Arrow
    return(paste0('<span style="color:green;">&#9650; ', x, '</span>'))
  } else {
    # Add Red Arrow
    return(paste0('<span style="color:red;">&#9660; ', x, '</span>'))
  }
}

merge_new_data <- current_us |>
  left_join(top10_inc, by = "Country")

new_share_gdp <- share_gdp |>
  select(Country, `2023`)

merge_new_data <- merge_new_data |>
  left_join(new_share_gdp, by = "Country")

new_table <- merge_new_data |>
  mutate(
    Spending = Country,
    ) |>
  select(Country, Spending, '2023.x', Increase, '2023.y') |>
  gt() |>
    tab_header(
    title = "Top 10 Countries by Military Spending Trends"
  ) |>
  text_transform(
    locations = cells_body(Spending),
    fn = function(x) {
     map(x, plot_country_line) |>
        ggplot_image(height = px(50),aspect_ratio = 5)
    }
  ) |>
  text_transform(
    locations = cells_body(Increase),
    fn = function(x) {
      map(x, display_change)
    }
  ) |>
    cols_label(
    Country = "",
    Increase = "Change from 2022",
    '2023.y' = "Share of GDP (%) in 2023",
    '2023.x' = "2023 Spending (US$ Billion)",
    Spending = "Spending from 2018 to 2023"
  ) |>
  tab_options(
    data_row.padding = px(0),
  ) |>
  tab_style(
    style = list(
      cell_text(
        align = "center",
        size = px(12),
      )
    ),
    locations = cells_column_labels()
  ) |>
  tab_style(
    style = cell_text(
        align = "center"
      ),
    locations = cells_body()
  )

new_table
```

# after consultation
```{r}
#| label: after-consultation
#| fig.width: 10
#| fig.height: 5
# Restructure Data for Bar Chart
top10_long <- current_us |> 
  select(Country, `2022`, `2023`) |>
  pivot_longer(cols = `2022`:`2023`, names_to = "Year", values_to = "Spending")

# Share of GDP Bar Chart
share_gdp_long <- share_gdp |> 
  select(Country, `2022`, `2023`) |>
  pivot_longer(cols = `2022`:`2023`, names_to = "Year", values_to = "Share")

# Merge Data
merged_data <- top10_long |>
  left_join(share_gdp_long, by = c("Country", "Year"))

scale_factor <- max(merged_data$Spending) / max(merged_data$Share)

# Bar plot
bar_plot <- ggplot(merged_data, aes(x = reorder(Country, Spending), y = Spending, fill = Year)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(label = round(Spending, 1)), 
            position = position_dodge(width = 0.9), 
            vjust = 0.3, hjust = -0.5,
            size = 3) +
  scale_y_continuous(
    name = "Military Spending in US$ (Billions)",
    breaks = seq(0, max(merged_data$Spending), by = 250),  # Adjust breaks for the primary y-axis
  ) +
  scale_fill_manual(values = c("2022" = "#00AFBB", "2023" = "#E7B800")) +  # Manually specify colors
  guides(
    fill = guide_legend(reverse = TRUE, title = "Military Spending")  # Reverse legend order
  ) +
  labs(
    x = "Country",
    y = "Military Spending in US$ (Billions)"
  ) +
  ylim(0, 1000) +  # Extend x-axis limits from 0 to 40
  coord_flip() +
  theme_minimal()

# Point plot with different shapes for different years and swapped legend order
point_plot <- ggplot(merged_data, aes(x = reorder(Country, Spending), y = Share, shape = Year, color = Share)) +
  geom_point(position = position_dodge(width = 0.9), size = 3) +
  geom_text(aes(label = round(Share, 2)), position = position_dodge(width = 0.9), vjust = 0, hjust = -0.3, size = 3) +
  coord_flip() +
  scale_shape_manual(values = c("2022" = 16, "2023" = 15)) +  # Use circle (16) and square (15) shapes
  scale_color_stepsn(colors = c("lightgreen", "darkgreen"), breaks = seq(0, 30, 5)) +
  guides(
    shape = guide_legend(reverse = TRUE, title = "Year"),  # Reverse legend order
    color = guide_colorbar(title = "Share of GDP")
  ) + 
  labs(
    x = NULL,
    y = "Share of GDP (%)"
  ) +
  ylim(0, 45) +  # Extend x-axis limits from 0 to 40
  theme_minimal() +
  theme(
    axis.text.y = element_blank(),  # Remove y-axis text
    axis.ticks.y = element_blank(), # Remove y-axis ticks
    axis.title.y = element_blank()  # Remove y-axis title
  )

# Combine plots with a shared legend at the bottom
combined_plot <- 
  (bar_plot + point_plot) + 
  plot_layout(guides = "collect") &
  theme(legend.position = "right") &
  plot_annotation(title = "Top 10 Countries by Military Spending in 2023 and Share of GDP")

# Display the combined plot
combined_plot
```